const CACHE_NAME = 'casino-battle-v1';\nconst urlsToCache = [\n  '/',\n  '/static/js/bundle.js',\n  '/static/css/main.css',\n  '/manifest.json'\n];\n\n// Install Service Worker\nself.addEventListener('install', (event) => {\n  event.waitUntil(\n    caches.open(CACHE_NAME)\n      .then((cache) => {\n        return cache.addAll(urlsToCache);\n      })\n  );\n});\n\n// Fetch event\nself.addEventListener('fetch', (event) => {\n  event.respondWith(\n    caches.match(event.request)\n      .then((response) => {\n        // Return cached version or fetch from network\n        return response || fetch(event.request);\n      }\n    )\n  );\n});\n\n// Update Service Worker\nself.addEventListener('activate', (event) => {\n  event.waitUntil(\n    caches.keys().then((cacheNames) => {\n      return Promise.all(\n        cacheNames.map((cacheName) => {\n          if (cacheName !== CACHE_NAME) {\n            return caches.delete(cacheName);\n          }\n        })\n      );\n    })\n  );\n});\n\n// Push notification handler (for future use)\nself.addEventListener('push', (event) => {\n  const options = {\n    body: event.data ? event.data.text() : 'New game starting!',\n    icon: '/icon-192x192.png',\n    badge: '/icon-72x72.png',\n    vibrate: [200, 100, 200],\n    data: {\n      dateOfArrival: Date.now(),\n      primaryKey: 1\n    },\n    actions: [\n      {\n        action: 'explore',\n        title: 'Join Now',\n        icon: '/icon-192x192.png'\n      },\n      {\n        action: 'close',\n        title: 'Close',\n        icon: '/icon-192x192.png'\n      }\n    ]\n  };\n\n  event.waitUntil(\n    self.registration.showNotification('Casino Battle Royale', options)\n  );\n});"